services:
  # データベース
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    restart: always
    networks:
      - backend
    ports:
      - "5436:5432"

  # バックエンドAPI
  api:
    build:
      context: ./backend
      dockerfile: ../docker/api/Dockerfile
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
    restart: always
    depends_on:
      - db
    networks:
      - backend
      - frontend
    ports:
      - "8004:8000"

  # フロントエンド
  web:
    build:
      context: ./frontend
      dockerfile: ../docker/web/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://${DOMAIN}:8004
    restart: always
    depends_on:
      - api
    networks:
      - frontend
    ports:
      - "3004:3000"

  # リバースプロキシ
  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./frontend/public:/var/www/html
    ports:
      - "84:80"
      - "444:443"
    depends_on:
      - api
      - web
    networks:
      - frontend
    restart: always

  # MinIOストレージ (S3互換のオブジェクトストレージ)
  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    env_file:
      - ./.env
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9004:9000"
      - "9005:9001"
    networks:
      - backend
    restart: always

networks:
  backend:
  frontend:

volumes:
  postgres_data:
  minio_data:
